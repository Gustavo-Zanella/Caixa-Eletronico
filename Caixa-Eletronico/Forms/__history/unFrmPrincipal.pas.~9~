unit unFrmPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons,
  {Programa}
  unFrmCadPessoa, unFrmLogin;

type
  TFrmPrincipal = class(TForm)
    BtnDepositar: TBitBtn;
    BtnExtrato: TBitBtn;
    BtnSacar: TBitBtn;
    procedure BtnSacarClick(Sender: TObject);
    procedure BtnDepositarClick(Sender: TObject);
    procedure BtnExtratoClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    FoFrmCadPessoa: TFrmCadPessoa;
    function getoFrmCadPessoa: TFrmCadPessoa;
    { Private declarations }
  public
    Property oFrmCadPessoa : TFrmCadPessoa read getoFrmCadPessoa write FoFrmCadPessoa;
    Property oFrmLogin     : TFrmCadPessoa read getoFrmCadPessoa write FoFrmCadPessoa;
  end;

var
  FrmPrincipal: TFrmPrincipal;

implementation

{$R *.dfm}

procedure TFrmPrincipal.BtnDepositarClick(Sender: TObject);
begin
//
end;

procedure TFrmPrincipal.BtnExtratoClick(Sender: TObject);
begin
//
end;

procedure TFrmPrincipal.BtnSacarClick(Sender: TObject);
begin
//
end;

procedure TFrmPrincipal.FormShow(Sender: TObject);
begin
  with TFrmLogin.Create(self) do
  begin
    ShowModal;
    Release;
  end;
//
end;

function TFrmPrincipal.getoFrmCadPessoa: TFrmCadPessoa;
begin
  if not Assigned(FoFrmCadPessoa) then
    FoFrmCadPessoa := TFrmCadPessoa.Create(self);
  Result := FoFrmCadPessoa;
end;

end.
